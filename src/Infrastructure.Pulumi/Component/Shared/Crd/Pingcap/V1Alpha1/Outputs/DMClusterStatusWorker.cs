// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1
{

    [OutputType]
    public sealed class DMClusterStatusWorker
    {
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerConditions> Conditions;
        public readonly string FailoverUID;
        public readonly ImmutableDictionary<string, Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerFailuremembers> FailureMembers;
        public readonly string Image;
        public readonly ImmutableDictionary<string, Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerMembers> Members;
        public readonly string Phase;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerStatefulset StatefulSet;
        public readonly bool Synced;
        public readonly ImmutableDictionary<string, Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerVolumes> Volumes;

        [OutputConstructor]
        private DMClusterStatusWorker(
            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerConditions> conditions,

            string failoverUID,

            ImmutableDictionary<string, Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerFailuremembers> failureMembers,

            string image,

            ImmutableDictionary<string, Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerMembers> members,

            string phase,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerStatefulset statefulSet,

            bool synced,

            ImmutableDictionary<string, Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.DMClusterStatusWorkerVolumes> volumes)
        {
            Conditions = conditions;
            FailoverUID = failoverUID;
            FailureMembers = failureMembers;
            Image = image;
            Members = members;
            Phase = phase;
            StatefulSet = statefulSet;
            Synced = synced;
            Volumes = volumes;
        }
    }
}

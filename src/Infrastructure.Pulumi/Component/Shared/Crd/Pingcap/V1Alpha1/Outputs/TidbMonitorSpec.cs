// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1
{

    [OutputType]
    public sealed class TidbMonitorSpec
    {
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecAdditionalcontainers> AdditionalContainers;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecAdditionalvolumes> AdditionalVolumes;
        public readonly string AlertManagerRulesVersion;
        public readonly string AlertmanagerURL;
        public readonly ImmutableDictionary<string, string> Annotations;
        public readonly bool ClusterScoped;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecClusters> Clusters;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecDm Dm;
        public readonly bool EnableAlertRules;
        public readonly ImmutableDictionary<string, string> ExternalLabels;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecGrafana Grafana;
        public readonly string ImagePullPolicy;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecImagepullsecrets> ImagePullSecrets;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecInitializer Initializer;
        public readonly string KubePrometheusURL;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly ImmutableDictionary<string, string> NodeSelector;
        public readonly bool Persistent;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecPodsecuritycontext PodSecurityContext;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecPrometheus Prometheus;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecPrometheusreloader PrometheusReloader;
        public readonly string PvReclaimPolicy;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecReloader Reloader;
        public readonly string ReplicaExternalLabelName;
        public readonly int Replicas;
        public readonly int Shards;
        public readonly string Storage;
        public readonly string StorageClassName;
        public readonly Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecThanos Thanos;
        public readonly string Timezone;
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecTolerations> Tolerations;

        [OutputConstructor]
        private TidbMonitorSpec(
            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecAdditionalcontainers> additionalContainers,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecAdditionalvolumes> additionalVolumes,

            string alertManagerRulesVersion,

            string alertmanagerURL,

            ImmutableDictionary<string, string> annotations,

            bool clusterScoped,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecClusters> clusters,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecDm dm,

            bool enableAlertRules,

            ImmutableDictionary<string, string> externalLabels,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecGrafana grafana,

            string imagePullPolicy,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecImagepullsecrets> imagePullSecrets,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecInitializer initializer,

            string kubePrometheusURL,

            ImmutableDictionary<string, string> labels,

            ImmutableDictionary<string, string> nodeSelector,

            bool persistent,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecPodsecuritycontext podSecurityContext,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecPrometheus prometheus,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecPrometheusreloader prometheusReloader,

            string pvReclaimPolicy,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecReloader reloader,

            string replicaExternalLabelName,

            int replicas,

            int shards,

            string storage,

            string storageClassName,

            Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecThanos thanos,

            string timezone,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Pingcap.V1Alpha1.TidbMonitorSpecTolerations> tolerations)
        {
            AdditionalContainers = additionalContainers;
            AdditionalVolumes = additionalVolumes;
            AlertManagerRulesVersion = alertManagerRulesVersion;
            AlertmanagerURL = alertmanagerURL;
            Annotations = annotations;
            ClusterScoped = clusterScoped;
            Clusters = clusters;
            Dm = dm;
            EnableAlertRules = enableAlertRules;
            ExternalLabels = externalLabels;
            Grafana = grafana;
            ImagePullPolicy = imagePullPolicy;
            ImagePullSecrets = imagePullSecrets;
            Initializer = initializer;
            KubePrometheusURL = kubePrometheusURL;
            Labels = labels;
            NodeSelector = nodeSelector;
            Persistent = persistent;
            PodSecurityContext = podSecurityContext;
            Prometheus = prometheus;
            PrometheusReloader = prometheusReloader;
            PvReclaimPolicy = pvReclaimPolicy;
            Reloader = reloader;
            ReplicaExternalLabelName = replicaExternalLabelName;
            Replicas = replicas;
            Shards = shards;
            Storage = storage;
            StorageClassName = storageClassName;
            Thanos = thanos;
            Timezone = timezone;
            Tolerations = tolerations;
        }
    }
}

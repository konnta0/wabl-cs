// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1
{

    /// <summary>
    /// Ingress is used to specify how OpenTelemetry Collector is exposed. This functionality is only available if one of the valid modes is set. Valid modes are: deployment, daemonset and statefulset.
    /// </summary>
    [OutputType]
    public sealed class OpenTelemetryCollectorSpecIngress
    {
        /// <summary>
        /// Annotations to add to ingress. e.g. 'cert-manager.io/cluster-issuer: "letsencrypt"'
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// Hostname by which the ingress proxy can be reached.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// IngressClassName is the name of an IngressClass cluster resource. Ingress controller implementations use this field to know whether they should be serving this Ingress resource.
        /// </summary>
        public readonly string IngressClassName;
        /// <summary>
        /// TLS configuration.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecIngressTls> Tls;
        /// <summary>
        /// Type default value is: "" Supported types are: ingress
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private OpenTelemetryCollectorSpecIngress(
            ImmutableDictionary<string, string> annotations,

            string hostname,

            string ingressClassName,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecIngressTls> tls,

            string type)
        {
            Annotations = annotations;
            Hostname = hostname;
            IngressClassName = ingressClassName;
            Tls = tls;
            Type = type;
        }
    }
}

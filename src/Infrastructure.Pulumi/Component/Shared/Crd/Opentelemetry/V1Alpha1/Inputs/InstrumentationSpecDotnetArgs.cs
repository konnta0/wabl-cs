// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1
{

    /// <summary>
    /// DotNet defines configuration for DotNet auto-instrumentation.
    /// </summary>
    public class InstrumentationSpecDotnetArgs : Pulumi.ResourceArgs
    {
        [Input("env")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecDotnetEnvArgs>? _env;

        /// <summary>
        /// Env defines DotNet specific env vars. There are four layers for env vars' definitions and the precedence order is: `original container env vars` &gt; `language specific env vars` &gt; `common env vars` &gt; `instrument spec configs' vars`. If the former var had been defined, then the other vars would be ignored.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecDotnetEnvArgs> Env
        {
            get => _env ?? (_env = new InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecDotnetEnvArgs>());
            set => _env = value;
        }

        /// <summary>
        /// Image is a container image with DotNet SDK and auto-instrumentation.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        public InstrumentationSpecDotnetArgs()
        {
        }
    }
}

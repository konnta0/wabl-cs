// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1
{

    /// <summary>
    /// PrometheusCR defines the configuration for the retrieval of PrometheusOperator CRDs ( servicemonitor.monitoring.coreos.com/v1 and podmonitor.monitoring.coreos.com/v1 )  retrieval. All CR instances which the ServiceAccount has access to will be retrieved. This includes other namespaces.
    /// </summary>
    public class OpenTelemetryCollectorSpecTargetallocatorPrometheuscrArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enabled indicates whether to use a PrometheusOperator custom resources as targets or not.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("podMonitorSelector")]
        private InputMap<string>? _podMonitorSelector;

        /// <summary>
        /// PodMonitors to be selected for target discovery. This is a map of {key,value} pairs. Each {key,value} in the map is going to exactly match a label in a PodMonitor's meta labels. The requirements are ANDed.
        /// </summary>
        public InputMap<string> PodMonitorSelector
        {
            get => _podMonitorSelector ?? (_podMonitorSelector = new InputMap<string>());
            set => _podMonitorSelector = value;
        }

        [Input("serviceMonitorSelector")]
        private InputMap<string>? _serviceMonitorSelector;

        /// <summary>
        /// ServiceMonitors to be selected for target discovery. This is a map of {key,value} pairs. Each {key,value} in the map is going to exactly match a label in a ServiceMonitor's meta labels. The requirements are ANDed.
        /// </summary>
        public InputMap<string> ServiceMonitorSelector
        {
            get => _serviceMonitorSelector ?? (_serviceMonitorSelector = new InputMap<string>());
            set => _serviceMonitorSelector = value;
        }

        public OpenTelemetryCollectorSpecTargetallocatorPrometheuscrArgs()
        {
        }
    }
}

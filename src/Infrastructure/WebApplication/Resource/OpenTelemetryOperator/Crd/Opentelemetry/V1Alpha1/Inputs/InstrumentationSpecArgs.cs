// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1
{

    /// <summary>
    /// InstrumentationSpec defines the desired state of OpenTelemetry SDK and instrumentation.
    /// </summary>
    public class InstrumentationSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// DotNet defines configuration for DotNet auto-instrumentation.
        /// </summary>
        [Input("dotnet")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecDotnetArgs>? Dotnet { get; set; }

        [Input("env")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecEnvArgs>? _env;

        /// <summary>
        /// Env defines common env vars. There are four layers for env vars' definitions and the precedence order is: `original container env vars` &gt; `language specific env vars` &gt; `common env vars` &gt; `instrument spec configs' vars`. If the former var had been defined, then the other vars would be ignored.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecEnvArgs> Env
        {
            get => _env ?? (_env = new InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecEnvArgs>());
            set => _env = value;
        }

        /// <summary>
        /// Exporter defines exporter configuration.
        /// </summary>
        [Input("exporter")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecExporterArgs>? Exporter { get; set; }

        /// <summary>
        /// Java defines configuration for java auto-instrumentation.
        /// </summary>
        [Input("java")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecJavaArgs>? Java { get; set; }

        /// <summary>
        /// NodeJS defines configuration for nodejs auto-instrumentation.
        /// </summary>
        [Input("nodejs")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecNodejsArgs>? Nodejs { get; set; }

        [Input("propagators")]
        private InputList<string>? _propagators;

        /// <summary>
        /// Propagators defines inter-process context propagation configuration.
        /// </summary>
        public InputList<string> Propagators
        {
            get => _propagators ?? (_propagators = new InputList<string>());
            set => _propagators = value;
        }

        /// <summary>
        /// Python defines configuration for python auto-instrumentation.
        /// </summary>
        [Input("python")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecPythonArgs>? Python { get; set; }

        /// <summary>
        /// Resource defines the configuration for the resource attributes, as defined by the OpenTelemetry specification.
        /// </summary>
        [Input("resource")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecResourceArgs>? Resource { get; set; }

        /// <summary>
        /// Sampler defines sampling configuration.
        /// </summary>
        [Input("sampler")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.InstrumentationSpecSamplerArgs>? Sampler { get; set; }

        public InstrumentationSpecArgs()
        {
        }
    }
}

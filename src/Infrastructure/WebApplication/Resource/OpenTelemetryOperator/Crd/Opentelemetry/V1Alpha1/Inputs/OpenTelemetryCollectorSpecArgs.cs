// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1
{

    /// <summary>
    /// OpenTelemetryCollectorSpec defines the desired state of OpenTelemetryCollector.
    /// </summary>
    public class OpenTelemetryCollectorSpecArgs : Pulumi.ResourceArgs
    {
        [Input("args")]
        private InputMap<string>? _args;

        /// <summary>
        /// Args is the set of arguments to pass to the OpenTelemetry Collector binary
        /// </summary>
        public InputMap<string> Args
        {
            get => _args ?? (_args = new InputMap<string>());
            set => _args = value;
        }

        /// <summary>
        /// Autoscaler specifies the pod autoscaling configuration to use for the OpenTelemetryCollector workload.
        /// </summary>
        [Input("autoscaler")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecAutoscalerArgs>? Autoscaler { get; set; }

        /// <summary>
        /// Config is the raw JSON to be used as the collector's configuration. Refer to the OpenTelemetry Collector documentation for details.
        /// </summary>
        [Input("config")]
        public Input<string>? Config { get; set; }

        [Input("env")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecEnvArgs>? _env;

        /// <summary>
        /// ENV vars to set on the OpenTelemetry Collector's Pods. These can then in certain cases be consumed in the config file for the Collector.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecEnvArgs> Env
        {
            get => _env ?? (_env = new InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecEnvArgs>());
            set => _env = value;
        }

        [Input("envFrom")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecEnvfromArgs>? _envFrom;

        /// <summary>
        /// List of sources to populate environment variables on the OpenTelemetry Collector's Pods. These can then in certain cases be consumed in the config file for the Collector.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecEnvfromArgs> EnvFrom
        {
            get => _envFrom ?? (_envFrom = new InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecEnvfromArgs>());
            set => _envFrom = value;
        }

        /// <summary>
        /// HostNetwork indicates if the pod should run in the host networking namespace.
        /// </summary>
        [Input("hostNetwork")]
        public Input<bool>? HostNetwork { get; set; }

        /// <summary>
        /// Image indicates the container image to use for the OpenTelemetry Collector.
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// ImagePullPolicy indicates the pull policy to be used for retrieving the container image (Always, Never, IfNotPresent)
        /// </summary>
        [Input("imagePullPolicy")]
        public Input<string>? ImagePullPolicy { get; set; }

        /// <summary>
        /// MaxReplicas sets an upper bound to the autoscaling feature. If MaxReplicas is set autoscaling is enabled.
        /// </summary>
        [Input("maxReplicas")]
        public Input<int>? MaxReplicas { get; set; }

        /// <summary>
        /// MinReplicas sets a lower bound to the autoscaling feature.  Set this if your are using autoscaling. It must be at least 1
        /// </summary>
        [Input("minReplicas")]
        public Input<int>? MinReplicas { get; set; }

        /// <summary>
        /// Mode represents how the collector should be deployed (deployment, daemonset, statefulset or sidecar)
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("nodeSelector")]
        private InputMap<string>? _nodeSelector;

        /// <summary>
        /// NodeSelector to schedule OpenTelemetry Collector pods. This is only relevant to daemonset, statefulset, and deployment mode
        /// </summary>
        public InputMap<string> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<string>());
            set => _nodeSelector = value;
        }

        [Input("podAnnotations")]
        private InputMap<string>? _podAnnotations;

        /// <summary>
        /// PodAnnotations is the set of annotations that will be attached to Collector and Target Allocator pods.
        /// </summary>
        public InputMap<string> PodAnnotations
        {
            get => _podAnnotations ?? (_podAnnotations = new InputMap<string>());
            set => _podAnnotations = value;
        }

        /// <summary>
        /// PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
        /// </summary>
        [Input("podSecurityContext")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecPodsecuritycontextArgs>? PodSecurityContext { get; set; }

        [Input("ports")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecPortsArgs>? _ports;

        /// <summary>
        /// Ports allows a set of ports to be exposed by the underlying v1.Service. By default, the operator will attempt to infer the required ports by parsing the .Spec.Config property but this property can be used to open aditional ports that can't be inferred by the operator, like for custom receivers.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecPortsArgs> Ports
        {
            get => _ports ?? (_ports = new InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecPortsArgs>());
            set => _ports = value;
        }

        /// <summary>
        /// Replicas is the number of pod instances for the underlying OpenTelemetry Collector. Set this if your are not using autoscaling
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        /// <summary>
        /// Resources to set on the OpenTelemetry Collector pods.
        /// </summary>
        [Input("resources")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecResourcesArgs>? Resources { get; set; }

        /// <summary>
        /// SecurityContext will be set as the container security context.
        /// </summary>
        [Input("securityContext")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecSecuritycontextArgs>? SecurityContext { get; set; }

        /// <summary>
        /// ServiceAccount indicates the name of an existing service account to use with this instance.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        /// <summary>
        /// TargetAllocator indicates a value which determines whether to spawn a target allocation resource or not.
        /// </summary>
        [Input("targetAllocator")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecTargetallocatorArgs>? TargetAllocator { get; set; }

        [Input("tolerations")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecTolerationsArgs>? _tolerations;

        /// <summary>
        /// Toleration to schedule OpenTelemetry Collector pods. This is only relevant to daemonset, statefulset, and deployment mode
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecTolerationsArgs> Tolerations
        {
            get => _tolerations ?? (_tolerations = new InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecTolerationsArgs>());
            set => _tolerations = value;
        }

        /// <summary>
        /// UpgradeStrategy represents how the operator will handle upgrades to the CR when a newer version of the operator is deployed
        /// </summary>
        [Input("upgradeStrategy")]
        public Input<string>? UpgradeStrategy { get; set; }

        [Input("volumeClaimTemplates")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecVolumeclaimtemplatesArgs>? _volumeClaimTemplates;

        /// <summary>
        /// VolumeClaimTemplates will provide stable storage using PersistentVolumes. Only available when the mode=statefulset.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecVolumeclaimtemplatesArgs> VolumeClaimTemplates
        {
            get => _volumeClaimTemplates ?? (_volumeClaimTemplates = new InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecVolumeclaimtemplatesArgs>());
            set => _volumeClaimTemplates = value;
        }

        [Input("volumeMounts")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecVolumemountsArgs>? _volumeMounts;

        /// <summary>
        /// VolumeMounts represents the mount points to use in the underlying collector deployment(s)
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecVolumemountsArgs> VolumeMounts
        {
            get => _volumeMounts ?? (_volumeMounts = new InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecVolumemountsArgs>());
            set => _volumeMounts = value;
        }

        [Input("volumes")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecVolumesArgs>? _volumes;

        /// <summary>
        /// Volumes represents which volumes to use in the underlying collector deployment(s).
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecVolumesArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Pulumi.Kubernetes.Types.Inputs.Opentelemetry.V1Alpha1.OpenTelemetryCollectorSpecVolumesArgs>());
            set => _volumes = value;
        }

        public OpenTelemetryCollectorSpecArgs()
        {
        }
    }
}

// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1
{

    /// <summary>
    /// InstrumentationSpec defines the desired state of OpenTelemetry SDK and instrumentation.
    /// </summary>
    [OutputType]
    public sealed class InstrumentationSpec
    {
        /// <summary>
        /// DotNet defines configuration for DotNet auto-instrumentation.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecDotnet Dotnet;
        /// <summary>
        /// Env defines common env vars. There are four layers for env vars' definitions and the precedence order is: `original container env vars` &gt; `language specific env vars` &gt; `common env vars` &gt; `instrument spec configs' vars`. If the former var had been defined, then the other vars would be ignored.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecEnv> Env;
        /// <summary>
        /// Exporter defines exporter configuration.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecExporter Exporter;
        /// <summary>
        /// Java defines configuration for java auto-instrumentation.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecJava Java;
        /// <summary>
        /// NodeJS defines configuration for nodejs auto-instrumentation.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecNodejs Nodejs;
        /// <summary>
        /// Propagators defines inter-process context propagation configuration.
        /// </summary>
        public readonly ImmutableArray<string> Propagators;
        /// <summary>
        /// Python defines configuration for python auto-instrumentation.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecPython Python;
        /// <summary>
        /// Resource defines the configuration for the resource attributes, as defined by the OpenTelemetry specification.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecResource Resource;
        /// <summary>
        /// Sampler defines sampling configuration.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecSampler Sampler;

        [OutputConstructor]
        private InstrumentationSpec(
            Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecDotnet dotnet,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecEnv> env,

            Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecExporter exporter,

            Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecJava java,

            Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecNodejs nodejs,

            ImmutableArray<string> propagators,

            Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecPython python,

            Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecResource resource,

            Pulumi.Kubernetes.Types.Outputs.Opentelemetry.V1Alpha1.InstrumentationSpecSampler sampler)
        {
            Dotnet = dotnet;
            Env = env;
            Exporter = exporter;
            Java = java;
            Nodejs = nodejs;
            Propagators = propagators;
            Python = python;
            Resource = resource;
            Sampler = sampler;
        }
    }
}

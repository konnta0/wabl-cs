// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Certmanager.V1
{

    /// <summary>
    /// Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.
    /// </summary>
    public class ClusterIssuerSpecVaultArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auth configures how cert-manager authenticates with the Vault server.
        /// </summary>
        [Input("auth", required: true)]
        public Input<Pulumi.Kubernetes.Types.Inputs.Certmanager.V1.ClusterIssuerSpecVaultAuthArgs> Auth { get; set; } = null!;

        /// <summary>
        /// PEM-encoded CA bundle (base64-encoded) used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
        /// </summary>
        [Input("caBundle")]
        public Input<string>? CaBundle { get; set; }

        /// <summary>
        /// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: "my_pki_mount/sign/my-role-name".
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        /// <summary>
        /// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        public ClusterIssuerSpecVaultArgs()
        {
        }
    }
}

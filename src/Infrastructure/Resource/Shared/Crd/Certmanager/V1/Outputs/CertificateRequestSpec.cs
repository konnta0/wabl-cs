// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Certmanager.V1
{

    /// <summary>
    /// Desired state of the CertificateRequest resource.
    /// </summary>
    [OutputType]
    public sealed class CertificateRequestSpec
    {
        /// <summary>
        /// The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.
        /// </summary>
        public readonly string Duration;
        /// <summary>
        /// Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
        /// </summary>
        public readonly ImmutableDictionary<string, ImmutableArray<string>> Extra;
        /// <summary>
        /// Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
        /// </summary>
        public readonly ImmutableArray<string> Groups;
        /// <summary>
        /// IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.
        /// </summary>
        public readonly bool IsCA;
        /// <summary>
        /// IssuerRef is a reference to the issuer for this CertificateRequest.  If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to `cert-manager.io` if empty.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Certmanager.V1.CertificateRequestSpecIssuerref IssuerRef;
        /// <summary>
        /// The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.
        /// </summary>
        public readonly string Request;
        /// <summary>
        /// UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// Usages is the set of x509 usages that are requested for the certificate. If usages are set they SHOULD be encoded inside the CSR spec Defaults to `digital signature` and `key encipherment` if not specified.
        /// </summary>
        public readonly ImmutableArray<string> Usages;
        /// <summary>
        /// Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private CertificateRequestSpec(
            string duration,

            ImmutableDictionary<string, ImmutableArray<string>> extra,

            ImmutableArray<string> groups,

            bool isCA,

            Pulumi.Kubernetes.Types.Outputs.Certmanager.V1.CertificateRequestSpecIssuerref issuerRef,

            string request,

            string uid,

            ImmutableArray<string> usages,

            string username)
        {
            Duration = duration;
            Extra = extra;
            Groups = groups;
            IsCA = isCA;
            IssuerRef = issuerRef;
            Request = request;
            Uid = uid;
            Usages = usages;
            Username = username;
        }
    }
}
